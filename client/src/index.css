@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 100%;

  --foreground: 220 15% 15%;

  --border: 220 13% 91%;

  --card: 0 0% 100%;

  --card-foreground: 220 15% 15%;

  --card-border: 220 13% 91%;

  --sidebar: 220 20% 98%;

  --sidebar-foreground: 220 15% 20%;

  --sidebar-border: 220 13% 91%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 220 15% 95%;

  --sidebar-accent-foreground: 220 15% 20%;

  --sidebar-ring: 217 91% 60%;

  --popover: 0 0% 100%;

  --popover-foreground: 220 15% 15%;

  --popover-border: 220 13% 91%;

  --primary: 0 72% 51%;

  --primary-foreground: 0 0% 100%;

  --secondary: 220 13% 91%;

  --secondary-foreground: 220 15% 20%;

  --muted: 220 13% 95%;

  --muted-foreground: 220 9% 46%;

  --accent: 0 72% 51%;

  --accent-foreground: 0 0% 100%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 100%;

  --input: 220 13% 91%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 60%;
  --chart-2: 220 70% 50%;
  --chart-3: 199 89% 48%;
  --chart-4: 43 96% 56%;
  --chart-5: 142 76% 36%;

  --font-sans: Inter, Poppins, system-ui, -apple-system, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: JetBrains Mono, Menlo, monospace;
  --radius: .5rem;
  --shadow-2xs: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
  --shadow-xs: 0px 1px 3px 0px rgba(0, 0, 0, 0.1);
  --shadow-sm: 0px 2px 4px -1px rgba(0, 0, 0, 0.06), 0px 1px 2px -1px rgba(0, 0, 0, 0.1);
  --shadow: 0px 4px 6px -1px rgba(0, 0, 0, 0.1), 0px 2px 4px -2px rgba(0, 0, 0, 0.1);
  --shadow-md: 0px 6px 12px -2px rgba(0, 0, 0, 0.12), 0px 3px 6px -3px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0px 10px 20px -4px rgba(0, 0, 0, 0.15), 0px 4px 8px -4px rgba(0, 0, 0, 0.1);
  --shadow-xl: 0px 20px 40px -8px rgba(0, 0, 0, 0.2), 0px 8px 16px -8px rgba(0, 0, 0, 0.1);
  --shadow-2xl: 0px 30px 60px -12px rgba(0, 0, 0, 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 25% 10%;

  --foreground: 0 0% 98%;

  --border: 220 20% 20%;

  --card: 220 22% 12%;

  --card-foreground: 0 0% 98%;

  --card-border: 220 20% 18%;

  --sidebar: 220 25% 9%;

  --sidebar-foreground: 0 0% 95%;

  --sidebar-border: 220 20% 16%;

  --sidebar-primary: 217 91% 60%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 220 22% 15%;

  --sidebar-accent-foreground: 0 0% 95%;

  --sidebar-ring: 217 91% 60%;

  --popover: 220 22% 14%;

  --popover-foreground: 0 0% 95%;

  --popover-border: 220 20% 20%;

  --primary: 0 72% 51%;

  --primary-foreground: 0 0% 100%;

  --secondary: 220 20% 20%;

  --secondary-foreground: 0 0% 95%;

  --muted: 220 20% 18%;

  --muted-foreground: 220 9% 60%;

  --accent: 0 72% 51%;

  --accent-foreground: 0 0% 100%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 100%;

  --input: 220 20% 25%;
  --ring: 217 91% 60%;
  --chart-1: 217 91% 70%;
  --chart-2: 220 70% 60%;
  --chart-3: 199 89% 58%;
  --chart-4: 43 96% 66%;
  --chart-5: 142 76% 46%;

  --shadow-2xs: 0px 1px 2px 0px rgba(0, 0, 0, 0.3);
  --shadow-xs: 0px 1px 3px 0px rgba(0, 0, 0, 0.4);
  --shadow-sm: 0px 2px 4px -1px rgba(0, 0, 0, 0.3), 0px 1px 2px -1px rgba(0, 0, 0, 0.4);
  --shadow: 0px 4px 6px -1px rgba(0, 0, 0, 0.4), 0px 2px 4px -2px rgba(0, 0, 0, 0.3);
  --shadow-md: 0px 6px 12px -2px rgba(0, 0, 0, 0.5), 0px 3px 6px -3px rgba(0, 0, 0, 0.4);
  --shadow-lg: 0px 10px 20px -4px rgba(0, 0, 0, 0.6), 0px 4px 8px -4px rgba(0, 0, 0, 0.5);
  --shadow-xl: 0px 20px 40px -8px rgba(0, 0, 0, 0.7), 0px 8px 16px -8px rgba(0, 0, 0, 0.6);
  --shadow-2xl: 0px 30px 60px -12px rgba(0, 0, 0, 0.8);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Animated gradient background */
  .animated-bg {
    background: linear-gradient(-45deg, hsl(var(--background)), hsl(var(--card)), hsl(var(--background)), hsl(var(--muted)));
    background-size: 400% 400%;
    animation: gradient-shift 15s ease infinite;
  }

  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* Gradient text animation */
  .animate-gradient {
    background-size: 200% 200%;
    animation: gradient-flow 3s ease infinite;
  }

  .animate-gradient-slow {
    background-size: 200% 200%;
    animation: gradient-flow 8s ease infinite;
  }

  @keyframes gradient-flow {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* Glow effects */
  .glow-primary {
    filter: drop-shadow(0 0 8px hsl(var(--primary) / 0.5));
  }

  .glow-gold {
    filter: drop-shadow(0 0 12px rgba(234, 179, 8, 0.6));
    animation: pulse-glow 2s ease-in-out infinite;
  }

  .glow-silver {
    filter: drop-shadow(0 0 10px rgba(156, 163, 175, 0.5));
    animation: pulse-glow 2s ease-in-out infinite;
  }

  .glow-bronze {
    filter: drop-shadow(0 0 10px rgba(180, 83, 9, 0.5));
    animation: pulse-glow 2s ease-in-out infinite;
  }

  .glow-text {
    text-shadow: 0 0 20px hsl(var(--primary) / 0.5), 0 0 40px hsl(var(--accent) / 0.3);
  }

  .glow-text-subtle {
    text-shadow: 0 0 10px hsl(var(--primary) / 0.2);
  }

  .glow-card-primary {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.15), 0 0 40px hsl(var(--primary) / 0.1);
  }

  .glow-card-gold {
    box-shadow: 0 0 20px rgba(234, 179, 8, 0.2), 0 0 40px rgba(234, 179, 8, 0.1);
  }

  .glow-card-silver {
    box-shadow: 0 0 15px rgba(156, 163, 175, 0.15), 0 0 30px rgba(156, 163, 175, 0.08);
  }

  .glow-card-bronze {
    box-shadow: 0 0 15px rgba(180, 83, 9, 0.2), 0 0 30px rgba(180, 83, 9, 0.1);
  }

  .glow-badge {
    box-shadow: 0 0 10px hsl(var(--primary) / 0.3);
  }

  .glow-discord {
    box-shadow: 0 0 20px rgba(88, 101, 242, 0.4);
  }

  .glow-telegram {
    box-shadow: 0 0 20px rgba(38, 165, 228, 0.4);
  }

  @keyframes pulse-glow {
    0%, 100% { 
      filter: drop-shadow(0 0 8px currentColor);
      opacity: 1;
    }
    50% { 
      filter: drop-shadow(0 0 20px currentColor);
      opacity: 0.8;
    }
  }

  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  /* Float animation */
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  /* Pulse slow */
  .animate-pulse-slow {
    animation: pulse-slow 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse-slow {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.85; }
  }

  /* Bounce slow */
  .animate-bounce-slow {
    animation: bounce-slow 3s infinite;
  }

  @keyframes bounce-slow {
    0%, 100% {
      transform: translateY(-5%);
      animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
      transform: translateY(0);
      animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
  }

  /* Slide in animation */
  .animate-slide-in {
    animation: slide-in 0.5s ease-out;
  }

  @keyframes slide-in {
    0% {
      opacity: 0;
      transform: translateX(-30px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* Fade in animation */
  .animate-fade-in {
    animation: fade-in 0.6s ease-out;
  }

  @keyframes fade-in {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Scale in animation */
  .animate-scale-in {
    animation: scale-in 0.5s ease-out;
  }

  @keyframes scale-in {
    0% {
      opacity: 0;
      transform: scale(0.9);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  /* Grid background pattern */
  .bg-grid {
    background-image: 
      linear-gradient(hsl(var(--primary) / 0.05) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--primary) / 0.05) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: grid-flow 20s linear infinite;
  }

  @keyframes grid-flow {
    0% { background-position: 0 0; }
    100% { background-position: 50px 50px; }
  }

  /* Shimmer effect */
  .shimmer {
    position: relative;
    overflow: hidden;
  }

  .shimmer::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    animation: shimmer 3s infinite;
  }

  @keyframes shimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }

  /* Rotate animation */
  .animate-rotate {
    animation: rotate 20s linear infinite;
  }

  @keyframes rotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Scale pulse */
  .animate-scale-pulse {
    animation: scale-pulse 2s ease-in-out infinite;
  }

  @keyframes scale-pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
  }

  /* Loading screen animations */
  .animate-spin-slow {
    animation: spin-slow 3s linear infinite;
  }

  @keyframes spin-slow {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .animate-fade-out {
    animation: fade-out 0.5s ease-out forwards;
  }

  @keyframes fade-out {
    0% { opacity: 1; }
    100% { opacity: 0; }
  }

  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  @keyframes pulse-glow {
    0%, 100% { 
      box-shadow: 0 0 20px rgba(220, 38, 38, 0.5),
                  0 0 40px rgba(220, 38, 38, 0.3),
                  0 0 60px rgba(220, 38, 38, 0.2);
    }
    50% { 
      box-shadow: 0 0 30px rgba(220, 38, 38, 0.8),
                  0 0 60px rgba(220, 38, 38, 0.5),
                  0 0 90px rgba(220, 38, 38, 0.3);
    }
  }
}